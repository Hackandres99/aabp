
@{
    ViewBag.Title = "Cartas";
}

<h2 style="text-align: center; border-radius: 20px; margin-bottom: 30px; background-color: #337ab7; padding: 5px; font-size: 72px; font-family: 'Times New Roman' ;">Cartas</h2>
<!DOCTYPE html>
<html>
<head>
    <title>Juego de Memoria</title>
    <meta charset="UTF-8">
    <style>
        /* Estilos para las cartas */
        .card {
            width: 150px;
            height: 200px;
            margin: 10px;
            border: 1px solid; /* Agregar un borde transparente */
            font-size: 72px;
            text-align: center;
            cursor: pointer;
            display: inline-block;
        }

            /* Estilos para las cartas que ya se encontraron */
            .card.matched {
                background-color: #ccc;
                cursor: default;
            }


        /* Estilos para centrar el juego */
        h1 {
            font-size: 30px;
        }

        img {
            max-width: 100%;
            height: auto;
            margin-top: 20px;
            margin-bottom: 20px;
        }

        input[type="text"] {
            padding: 10px;
            margin-top: 20px;
            margin-bottom: 10px;
            font-size: 18px;
            border-radius: 20px;
        }

        button {
            padding: 10px 20px;
            font-size: 18px;
            background-color: #007bff;
            color: #fff;
            border: none;
            cursor: pointer;
            margin-bottom: 20px;
            border-radius: 20px;
        }

            button:disabled {
                opacity: 0.5;
                cursor: not-allowed;
            }

        #word-container {
            font-size: 24px;
            margin-bottom: 20px;
        }

        #guesses-left {
            font-size: 18px;
        }

        p {
            margin-bottom: 10px;
        }

        .alert {
            padding: 10px;
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
            border-radius: 5px;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="raw text-center">
        <h1>Juego de Memoria</h1>
        <p>Haz clic en las cartas para encontrar las parejas:</p>
        <div id="game-board"></div>
        <button onclick="restartGame()">Reiniciar</button>
    </div>

    <script>
        var gameBoard = document.getElementById("game-board");
        var cards = [
            { value: "🐶", matched: false },
            { value: "🐶", matched: false },
            { value: "👨‍🦯", matched: false },
            { value: "👨‍🦯", matched: false },
            { value: "👓", matched: false },
            { value: "👓", matched: false },
            { value: "🖥️", matched: false },
            { value: "🖥️", matched: false },
            { value: "👀", matched: false },
            { value: "👀", matched: false },
            { value: "📱", matched: false },
            { value: "📱", matched: false },
        ];
        var cardValues = ['A', 'A', 'B', 'B', 'C', 'C', 'D', 'D', 'E', 'E', 'F', 'F', 'G', 'G', 'H', 'H'];
        var firstCard = null;
        var secondCard = null;
        var clickDisabled = false; // variable para controlar el doble clic

        function shuffle(array) {
            var currentIndex = array.length, temporaryValue, randomIndex;

            while (currentIndex !== 0) {
                randomIndex = Math.floor(Math.random() * currentIndex);
                currentIndex -= 1;
                temporaryValue = array[currentIndex];
                array[currentIndex] = array[randomIndex];
                array[randomIndex] = temporaryValue;
            }

            return array;
        }

        function createCard(value) {
            var card = document.createElement("div");
            card.classList.add("card");
            card.classList.add("flipped"); // Agrega la clase "flipped" para indicar que la carta está volteada
            card.dataset.value = value;
            card.classList.add("face-down"); // Agregar clase "face-down" para cartas boca abajo
            card.addEventListener("click", function () {
                if (this.className !== "card matched" && !clickDisabled && this.classList.contains("face-down")) { // Verificar si la carta está boca abajo
                    this.classList.remove("face-down"); // Remover clase "face-down" para voltear la carta
                    this.innerHTML = value;
                    if (!firstCard) {
                        firstCard = this;
                    } else if (!secondCard) {
                        secondCard = this;
                        if (firstCard.innerHTML === secondCard.innerHTML) {
                            firstCard.className = "card matched";
                            secondCard.className = "card matched";
                            firstCard = null;
                            secondCard = null;
                        } else {
                            clickDisabled = true;
                            setTimeout(function () {
                                firstCard.classList.add("face-down"); // Agregar clase "face-down" para volver a boca abajo la carta
                                secondCard.classList.add("face-down");
                                firstCard.innerHTML = "";
                                secondCard.innerHTML = "";
                                firstCard = null;
                                secondCard = null;
                                clickDisabled = false;
                            }, 1000);
                        }
                    }

                };
                return card;
            });
            return card;
        }






        function initialize() {
            var shuffledValues = shuffle(cardValues);
            var gameBoard = document.getElementById("game-board");
            for (var i = 0; i < shuffledValues.length; i++) {
                var card = createCard(shuffledValues[i]);
                gameBoard.appendChild(card);
            }
        }

        initialize();




        function showCards() {
            gameBoard.innerHTML = "";
            for (var i = 0; i < cards.length; i++) {
                var card = createCard(cards[i].value);
                card.classList.remove("flipped"); // Remueve la clase "flipped" para mostrar la carta boca abajo
                gameBoard.appendChild(card);
            }
        }



        function restartGame() {
            shuffle(cards);
            showCards();
        }

        shuffle(cards);
        showCards();
        var cardsFlipped = 0;
        var maxCardsFlipped = 8;

        function flipCard() {
            if (lockBoard) return;
            if (this === firstCard) return;

            this.classList.add("flip");
            this.removeEventListener("click", flipCard);

            if (!firstCard) {
                hasFlippedCard = true;
                firstCard = this;
                return;
            }

            secondCard = this;
            checkForMatch();
        }

        function checkForMatch() {
            var isMatch = firstCard.innerHTML === secondCard.innerHTML;

            isMatch ? disableCards() : unflipCards();
        }

        function disableCards() {
            firstCard.removeEventListener("click", flipCard);
            secondCard.removeEventListener("click", flipCard);

            cardsFlipped += 2;

            if (cardsFlipped === maxCardsFlipped) {
                alert("¡Felicidades, has ganado!");
            }

            resetBoard();
        }

        function unflipCards() {
            lockBoard = true;

            setTimeout(function () {
                firstCard.classList.remove("flip");
                secondCard.classList.remove("flip");

                resetBoard();
            }, 1000);
        }

        function resetBoard() {
            [hasFlippedCard, lockBoard] = [false, false];
            [firstCard, secondCard] = [null, null];

            // Habilitar los eventos click para todas las cartas
            cards.forEach(function (card) {
                card.addEventListener("click", flipCard);
            });
        }

        shuffle(cards);

        cards.forEach(function (card) {
            card.addEventListener("click", function () {
                // Desactivar el evento click para la carta que se ha seleccionado
                this.removeEventListener("click", flipCard);

                flipCard.call(this);
            });
        });


    </script>
</body>
</html>

